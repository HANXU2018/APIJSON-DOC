(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{470:function(e,t,r){"use strict";r.r(t);var a=r(5),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"q-a-常见问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#q-a-常见问题"}},[e._v("#")]),e._v(" Q&A 常见问题")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),r("p",[e._v("目录\n")]),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#提问技巧"}},[e._v("提问技巧")])]),r("li",[r("a",{attrs:{href:"#常见问题列表"}},[e._v("常见问题列表")]),r("ul",[r("li",[r("a",{attrs:{href:"#_1-如何定制业务逻辑"}},[e._v("1.如何定制业务逻辑？")])]),r("li",[r("a",{attrs:{href:"#_2-如何控制权限"}},[e._v("2.如何控制权限？")])]),r("li",[r("a",{attrs:{href:"#_3-如何校验参数"}},[e._v("3.如何校验参数？")])]),r("li",[r("a",{attrs:{href:"#_4-如何生成文档"}},[e._v("4.如何生成文档？")])]),r("li",[r("a",{attrs:{href:"#_5-如何-or-连接不同-key-对应的条件"}},[e._v("5.如何 OR 连接不同 key 对应的条件？")])]),r("li",[r("a",{attrs:{href:"#_6-登录后-增删改-报错未登录"}},[e._v("6.登录后 增删改 报错未登录？")])]),r("li",[r("a",{attrs:{href:"#_7-和-graphql-的区别"}},[e._v("7.和 GraphQL 的区别")])]),r("li",[r("a",{attrs:{href:"#_8-和-swagger-yapi-等接口工具的区别"}},[e._v("8.和 Swagger, YApi 等接口工具的区别")])]),r("li",[r("a",{attrs:{href:"#_9-和-hiberante-jpa-jooq-prisma-sequelize-linq-等其它-orm-库的区别"}},[e._v("9.和 Hiberante, JPA, JOOQ, Prisma, Sequelize, Linq 等其它 ORM 库的区别")])]),r("li",[r("a",{attrs:{href:"#_10-apijson-相比其它框架-库的优势"}},[e._v("10.APIJSON 相比其它框架/库的优势？")])]),r("li",[r("a",{attrs:{href:"#_11-如何使用自增主键"}},[e._v("11.如何使用自增主键？")])]),r("li",[r("a",{attrs:{href:"#_12-如何自定义主键名称"}},[e._v("12.如何自定义主键名称？")])]),r("li",[r("a",{attrs:{href:"#_13-如何实现多数据源"}},[e._v("13.如何实现多数据源？")])]),r("li",[r("a",{attrs:{href:"#_14-自己已经有一套鉴权系统了-不想用-apijson-的这套怎么办"}},[e._v("14.自己已经有一套鉴权系统了，不想用 APIJSON 的这套怎么办？")])]),r("li",[r("a",{attrs:{href:"#_15-如何自动插入-create-time-update-time-creator-id-之类的字段"}},[e._v("15.如何自动插入 createtime, updatetime, creator_id 之类的字段？")])]),r("li",[r("a",{attrs:{href:"#_16-如何集成到自己现有的项目"}},[e._v("16.如何集成到自己现有的项目？")])]),r("li",[r("a",{attrs:{href:"#_17-demo-提供的表-sql-文件很多-如果集成到自己项目-哪些表是必须的"}},[e._v("17.Demo 提供的表 SQL 文件很多，如果集成到自己项目，哪些表是必须的？")])]),r("li",[r("a",{attrs:{href:"#_18-如何一次性查全部数据-如何一次性查所有表记录"}},[e._v("18.如何一次性查全部数据/如何一次性查所有表记录？")])])])])])]),r("p")]),e._v(" "),r("h2",{attrs:{id:"提问技巧"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#提问技巧"}},[e._v("#")]),e._v(" 提问技巧")]),e._v(" "),r("ol",[r("li",[e._v("尝试在"),r("a",{attrs:{href:"https://github.com/TommyLemon/APIJSON/issues?q=is%3Aissue+is%3Aclosed",target:"_blank",rel:"noopener noreferrer"}},[e._v("历史问题"),r("OutboundLink")],1),e._v("搜索答案。")]),e._v(" "),r("li",[e._v("尝试阅读"),r("a",{attrs:{href:"https://github.com/TommyLemon/APIJSON/blob/master/Document.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("通用文档"),r("OutboundLink")],1),e._v("或看"),r("a",{attrs:{href:"http://i.youku.com/apijson",target:"_blank",rel:"noopener noreferrer"}},[e._v("视频教程"),r("OutboundLink")],1),e._v("找到答案。")]),e._v(" "),r("li",[e._v("尝试阅读示例代码找到答案。")]),e._v(" "),r("li",[e._v("尝试自己检查或试验以找到答案。")]),e._v(" "),r("li",[e._v("尝试阅读源代码以找到答案。")])]),e._v(" "),r("p",[e._v("如果以上都尝试过了请提一个新的issue\n参考"),r("a",{attrs:{href:"https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way",target:"_blank",rel:"noopener noreferrer"}},[e._v("提问的智慧"),r("OutboundLink")],1)]),e._v(" "),r("h2",{attrs:{id:"常见问题列表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常见问题列表"}},[e._v("#")]),e._v(" 常见问题列表")]),e._v(" "),r("h3",{attrs:{id:"_1-如何定制业务逻辑"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-如何定制业务逻辑"}},[e._v("#")]),e._v(" 1.如何定制业务逻辑？")]),e._v(" "),r("p",[e._v("在后端编写 远程函数，可以拿到 session、version、当前 JSON 对象、参数名称 等，然后对查到的数据自定义处理")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/Tencent/APIJSON/issues/#101",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #101"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"_2-如何控制权限"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何控制权限"}},[e._v("#")]),e._v(" 2.如何控制权限？")]),e._v(" "),r("p",[e._v("在 Access 表配置校验规则，默认不允许访问，需要对 每张表、每种角色、每种操作 做相应的配置，粒度细分到行级")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/Tencent/APIJSON/issues/#12",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #12"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"_3-如何校验参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何校验参数"}},[e._v("#")]),e._v(" 3.如何校验参数？")]),e._v(" "),r("p",[e._v("在 Request 表配置校验规则 structure，提供 MUST、TYPE、VERIFY 等通用方法，可通过 远程函数 来完全自定义")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/Tencent/APIJSON/wiki#%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86",target:"_blank",rel:"noopener noreferrer"}},[e._v("WIKI"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"_4-如何生成文档"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-如何生成文档"}},[e._v("#")]),e._v(" 4.如何生成文档？")]),e._v(" "),r("p",[e._v("用 APIAuto(https://github.com/TommyLemon/APIAuto)\n"),r("a",{attrs:{href:"https://github.com/Tencent/APIJSON/issues/#85",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #85"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"_5-如何-or-连接不同-key-对应的条件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-如何-or-连接不同-key-对应的条件"}},[e._v("#")]),e._v(" 5.如何 OR 连接不同 key 对应的条件？")]),e._v(" "),r("p",[e._v('用对象关键词 @combine，例如 "@combine":"name~,tag~"')]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/Tencent/APIJSON/issues/#107",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #107"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"_6-登录后-增删改-报错未登录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-登录后-增删改-报错未登录"}},[e._v("#")]),e._v(" 6.登录后 增删改 报错未登录？")]),e._v(" "),r("p",[e._v("如果是自己的网页、小程序、客户端这样报错，一般是因为没有存取 Cookie，需要在登录成功后保存 Cookie 并在调其它接口时带上")]),e._v(" "),r("p",[e._v("https://gitee.com/Tencent/APIJSON/issues/I1JTYH")]),e._v(" "),r("p",[e._v("如果使用网页工具测试报错，则很可能是 Chrome 80+ 强制 same-site Cookie 的策略导致，可以改用 Postman 或修改 Chrome 设置\n"),r("a",{attrs:{href:"https://github.com/Tencent/APIJSON/issues/#166",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #166"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"_7-和-graphql-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-和-graphql-的区别"}},[e._v("#")]),e._v(" 7.和 GraphQL 的区别")]),e._v(" "),r("p",[e._v("GraphQL 是用来聚合和过滤数据的网关，不提供增删改查功能；APIJSON 提供万能的增删改查 API，零代码实现各种简单的和复杂的需求")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/Tencent/APIJSON/issues/#205",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #205"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"_8-和-swagger-yapi-等接口工具的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-和-swagger-yapi-等接口工具的区别"}},[e._v("#")]),e._v(" 8.和 Swagger, YApi 等接口工具的区别")]),e._v(" "),r("p",[e._v("APIJSON 不是文档工具、也不是测试工具，配套的 APIAuto 才是 HTTP 接口 的文档/测试工具")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/Tencent/APIJSON/issues/#27",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #27"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"_9-和-hiberante-jpa-jooq-prisma-sequelize-linq-等其它-orm-库的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-和-hiberante-jpa-jooq-prisma-sequelize-linq-等其它-orm-库的区别"}},[e._v("#")]),e._v(" 9.和 Hiberante, JPA, JOOQ, Prisma, Sequelize, Linq 等其它 ORM 库的区别")]),e._v(" "),r("p",[e._v("只有 APIJSON 能做到不写任何代码，也不生成任何代码，直接零代码做到各种增删改查、各种结构嵌套、各种外键关联、各种条件与或非组合、各种 JOIN、各种子查询 等几乎所有 SQL 的功能，其它 ORM 库如果有做到零代码实现 APIJSON 1/10 功能 的，请直接 New issue 讨论。\n"),r("a",{attrs:{href:"https://github.com/Tencent/APIJSON/issues/#29",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #29"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"_10-apijson-相比其它框架-库的优势"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-apijson-相比其它框架-库的优势"}},[e._v("#")]),e._v(" 10.APIJSON 相比其它框架/库的优势？")]),e._v(" "),r("p",[e._v("APIJSONBoot 对比 SSM/SSH 等开发效率可提升 20 倍以上\n"),r("a",{attrs:{href:"https://github.com/Tencent/APIJSON/issues/#132",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #132"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"_11-如何使用自增主键"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-如何使用自增主键"}},[e._v("#")]),e._v(" 11.如何使用自增主键？")]),e._v(" "),r("p",[e._v("DemoSQLConfig static 代码块中重写 SIMPLE_CALLBACK 的 newId 方法，return null 即可\n"),r("a",{attrs:{href:"https://github.com/Tencent/APIJSON/issues/#186",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #186"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"_12-如何自定义主键名称"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-如何自定义主键名称"}},[e._v("#")]),e._v(" 12.如何自定义主键名称？")]),e._v(" "),r("p",[e._v("DemoSQLConfig static 代码块中重写 SIMPLE_CALLBACK 的 getIdKey/getUserIdKey 方法\nhttps://github.com/APIJSON/APIJSON-Demo/blob/master/APIJSON-Java-Server/APIJSONBoot/src/main/java/apijson/demo/DemoSQLConfig.java")]),e._v(" "),r("h3",{attrs:{id:"_13-如何实现多数据源"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-如何实现多数据源"}},[e._v("#")]),e._v(" 13.如何实现多数据源？")]),e._v(" "),r("p",[e._v("可以在 DemoSQLConfig 中根据 database, schema, table 或者其它方式来区分，给 getDBUri 返回不同的 uri\n"),r("a",{attrs:{href:"https://github.com/Tencent/APIJSON/issues/#148",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #148"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"_14-自己已经有一套鉴权系统了-不想用-apijson-的这套怎么办"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-自己已经有一套鉴权系统了-不想用-apijson-的这套怎么办"}},[e._v("#")]),e._v(" 14.自己已经有一套鉴权系统了，不想用 APIJSON 的这套怎么办？")]),e._v(" "),r("p",[e._v("DemoParser 重写 Parser 中的 isNeedVerifyLogin, isNeedVerifyRole, isNeedVerifyContent 来指定是否开关某个方面的校验\nhttps://github.com/Tencent/APIJSON/blob/22ed7cc9e801f35158e85cf6adfa5c1243eb09c9/APIJSONORM/src/main/java/apijson/orm/AbstractParser.java\n"),r("a",{attrs:{href:"https://github.com/Tencent/APIJSON/issues/#12",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #12"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"_15-如何自动插入-create-time-update-time-creator-id-之类的字段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-如何自动插入-create-time-update-time-creator-id-之类的字段"}},[e._v("#")]),e._v(" 15.如何自动插入 create_time, update_time, creator_id 之类的字段？")]),e._v(" "),r("p",[e._v("可以用 远程函数 + 引用赋值 来针对某个特定业务(表)来实现。如果是通用字段，还可以在重写 DemoObjectParser 重写 newSQLConfig，把从 Controller 经过 DemoParser 传过来的 gmt_create, create_time, creator_id 等 put 进去。具体见")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/Tencent/APIJSON/issues/#196",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #196"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"_16-如何集成到自己现有的项目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-如何集成到自己现有的项目"}},[e._v("#")]),e._v(" 16.如何集成到自己现有的项目？")]),e._v(" "),r("p",[e._v("在你用的框架类似 Demo 新增几个接口调用 DemoParser 即可,\nAPIJSONController 只是简单封装，可以不继承，\n例如 JFinal 版 Demo 中的 DemoController 就没有继承它，而是继承 JFinal 的 Controller。\n"),r("a",{attrs:{href:"https://github.com/Tencent/APIJSON/issues/##201",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue ##201"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"_17-demo-提供的表-sql-文件很多-如果集成到自己项目-哪些表是必须的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-demo-提供的表-sql-文件很多-如果集成到自己项目-哪些表是必须的"}},[e._v("#")]),e._v(" 17.Demo 提供的表 SQL 文件很多，如果集成到自己项目，哪些表是必须的？")]),e._v(" "),r("p",[e._v("Function(注册远程函数), Request(配置参数校验规则), Access(配置权限校验规则)\nhttps://github.com/APIJSON/APIJSON-Demo/tree/master/MySQL/single\n"),r("a",{attrs:{href:"https://github.com/Tencent/APIJSON/issues/#101",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #101"),r("OutboundLink")],1)]),e._v(" "),r("h3",{attrs:{id:"_18-如何一次性查全部数据-如何一次性查所有表记录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-如何一次性查全部数据-如何一次性查所有表记录"}},[e._v("#")]),e._v(" 18.如何一次性查全部数据/如何一次性查所有表记录？")]),e._v(" "),r("p",[e._v("不支持，必须有最大数量限制前端传参 count 的值（count: 0 取最大值，不传则为默认值 Parser.getDefaultQueryCount），\n可在 DemoParser 重写 Parser.getMaxQueryCount。\n另外 query: 2 是指同时查数据和数量。\nhttps://github.com/Tencent/APIJSON/blob/master/Document.md#3.2")]),e._v(" "),r("p",[e._v("其它问题见 Closed Issues\nhttps://github.com/Tencent/APIJSON/issues?q=is%3Aissue+is%3Aclosed")])])}),[],!1,null,null,null);t.default=s.exports}}]);